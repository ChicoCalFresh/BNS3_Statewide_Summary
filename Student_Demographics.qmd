---
title: "Student Demographics"
output: 
  html_document: 
    toc: yes
    toc_float: yes
    css: styles.css
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
source("common_code.R")
```

The following set of questions were asked in regards to the students' academic demographic. This includes information such as what Cal State University they are currently enrolled in, their class standing, major, GPA, and enrolled units. They were also asked questions about programs they participate in as well as what type of student they are (transfer, international, etc.) to help identify students.

<br>

## School

**Which Cal State University are you currently enrolled in? `r print_n_reporting('school')`**

<div class = "row">

<div class = "col-md-7">

```{r}
#| fig-height: 6
#| fig-width: 8
plot_frq(bns$school, ylim=c(0,450), wrap.labels =, hjust = -.2, vjust = "center" ) + xlab('') + ylab("Frequency") + coord_flip()
```

<br>

consider using ggdotchart and color/org by sector https://rpkgs.datanovia.com/ggpubr/reference/ggdotchart.html

## Class Standing

**Estimate your class standing by units completed `r print_n_reporting('q15')`**

<div class = "row">

<div class = "col-md-7">

```{r}
#| fig-height: 4.5
#| fig-width: 5.5
tmp <- recode(bns$q15,
              "Freshman (0-29 semester units or 0-44 quarter units)" = "Freshman",
              "Sophomore (30-59 semester units or 45-89 quarter units)" = "Sophmore",
              "Junior (60-89 semester units or 90-134 quarter units)" = "Junior",
              "Senior (90+ semester units or 135+ quarter units)" = "Senior")
              
plot_frq(tmp, wrap.labels = 8, ylim=c(0,750)) + xlab('Class Standing') + 
  ylab("Frequency")
```

## Major

**Which of the following categories best describes your major? `r print_n_reporting('q16')`**

```{r}
#| fig-height: 6
#| fig-width: 8.5
bns <- bns %>% mutate(q16=recode(q16, 
                                 "Science, Technology, Engineering and Math (STEM) (Includes Medicine, Computer Science, Agriculture, Accounting, Statistics, Nursing, and Nutrition)" = "Science, Technology, Engineering and Math (STEM)"))

plot_frq(bns$q16, ylim=c(0,875), wrap.labels = 16, sort.frq = 'desc') + xlab('') + ylab("Frequency") + theme(axis.text.x = element_text(size = 10))

```

*NOTE: Science, Technology, Engineering and Math (STEM) was shortened for the figure above, but also includes the following majors: Medicine, Computer Science, Agriculture, Accounting, Statistics, Nursing, and Nutrition.*

The majority of students in the data seem to be majoring in some type of `r names(sort(table(bns$q16), decreasing=TRUE)[1])` program (`r unname(sort(table(bns$q16), decreasing=TRUE)[1])` people). `r unname(sort(table(bns$q16), decreasing=TRUE)[2])` of the students are `r names(sort(table(bns$q16), decreasing=TRUE)[2])` majors. Students were also given the option of "Other" to fill in a major if it did not fall into one of the above categories and of the `r unname(sort(table(bns$q16), decreasing=TRUE)['Other (Please specify):'])` who selected this, `r unname(colSums(!is.na(bns))['q16_6_text'])` gave their responses below.

<br />

## Overall GPA

**What is your approximate overall grade point average (GPA)? `r print_n_reporting('q17')`**

*Note:* Any reports of a GPA over 4 were rounded down to 4.

::: row
::: col-md-7
```{r}
#| fig-height: 4
#| fig-width: 5.5
bns$gpa_fac <- cut(bns$q17, breaks = c(0, 1.5, 2.0, 2.5, 3.0, 3.5, 5.0), labels = c("1.5 or less", "1.51-2.0", "2.01-2.5", "2.51-3.0", "3.01-3.5", "3.51 or above"), ordered_result = TRUE, include.lowest = TRUE)
plot_frq(bns$gpa_fac) + xlab('GPA') + ylab("Frequency")

bns$q17 <- ifelse(bns$q17 > 5, 5, bns$q17)
gghistogram(bns, x = "q17", add = "mean", fill = chc_blue, alpha=1) + xlab("GPA") + ylab("Frequency")

## a <- ifelse((bns$q17>5) & (!is.na(bns$q17)), bns$q17, 1)
## b <- ifelse((bns$q17 > 3) & (bns$q17 <= 3.5), 1, 0) %>% na.omit()

# Outliers for GPA (write in click up)
# Drop values > 4? Cutoff at 5?
```

The average overall GPA for students is `r round(mean(bns$q17, na.rm = TRUE), 2)`, while the median is `r round(median(bns$q17, na.rm = TRUE), 2)`. The data suggests the majority of students have a GPA greater than 3.0.
:::
:::

<br />

## Currently Enrolled Units

**How many units are you currently taking? `r print_n_reporting('q18')`**

```{r}
# #| fig-height: 3.4
# #| fig-width: 7
gghistogram(bns, x = "q18", add = "mean", fill = chc_blue, alpha = 1) + 
  xlab("Units") + ylab("Frequency")


# unit outliers (click up)
# cutoff at 30?
```

The average number of units that a survey participant in this data is enrolled in is `r round(mean(bns$q18, na.rm = TRUE), 2)` units, while the median is `r median(bns$q18, na.rm = TRUE)` units. The data indicates that the majority of students are considered full-time (12 or more units), with `r names(sort(table(bns$q18), decreasing=TRUE)[1])` units being the highest occurring and `r names(sort(table(bns$q18), decreasing=TRUE)[2])` units being the second highest occuring.

<br />

## Student Identifiers

The following tables contain separate questions that were asked as a series of Yes/No responses to help further understand students. They were grouped together in this page by the start of the question.

### I identify as...

```{r}
questions <- c(paste0('q14_', 1:3), paste0('q14_', 5:12))
rnames <- c("A Transfer Student", "LGBTQA+", "A student with a disability", "A former foster youth/child",
            "An International student", "A non-California resident (not International)",
            "An ESL (English as a Second Language) student",
            "A Veteran of military service",
            "A student athlete",
            "A DREAM (i.e. undocumented) student",
            "A DACA (i.e. Deferred Action for Childhood Arrivals) student")
binary_table(questions, "Yes", rnames, ".")
```

### Disability Support Services

*Note*: This name varies by campus and may not always be called the Disability Support Service Center.

```{r}
#| fig-height: 5
#| fig-width: 7
questions <- paste0('q14_', 3:4)
rnames <- c('I identify as a student with a disability',
          'I receive services through my campus for a disability')
            
binary_table(questions, "Yes", rnames, ".")
```
